{"version":3,"file":"static/js/324.cff8d544.chunk.js","mappings":"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","sources":["workers/data-processor.js"],"sourcesContent":["export function generateTrails (data){\n  const SKIP_FACTOR = 25;\n  const SCALE_FACTOR = 100;\n\n  let position = [];\n  const estimatedPosition = [];\n  const length = data.get(\"Time\").length;\n\n  for (let i = SKIP_FACTOR * 2; i < length; i += 2 * SKIP_FACTOR) {\n    position.push([\n      [\n        data.get(\"Position (X)\")[i - 2 * SKIP_FACTOR] * SCALE_FACTOR,\n        data.get(\"Position (Y)\")[i - 2 * SKIP_FACTOR] * SCALE_FACTOR,\n      ],\n      [\n        data.get(\"Position (X)\")[i - SKIP_FACTOR] * SCALE_FACTOR,\n        data.get(\"Position (Y)\")[i - SKIP_FACTOR] * SCALE_FACTOR,\n      ],\n      [\n        data.get(\"Position (X)\")[i] * SCALE_FACTOR,\n        data.get(\"Position (Y)\")[i] * SCALE_FACTOR,\n      ],\n    ]);\n\n    estimatedPosition.push([\n      [\n        data.get(\"Position (X`)\")[i - 2 * SKIP_FACTOR] * SCALE_FACTOR,\n        data.get(\"Position (Y`)\")[i - 2 * SKIP_FACTOR] * SCALE_FACTOR,\n      ],\n      [\n        data.get(\"Position (X`)\")[i - SKIP_FACTOR] * SCALE_FACTOR,\n        data.get(\"Position (Y`)\")[i - SKIP_FACTOR] * SCALE_FACTOR,\n      ],\n      [\n        data.get(\"Position (X`)\")[i] * SCALE_FACTOR,\n        data.get(\"Position (Y`)\")[i] * SCALE_FACTOR,\n      ],\n    ]);\n  }\n\n  return { position, estimatedPosition };\n};\n\nexport function processMeasurements(data, simplify = true){\n  let result = [];\n  const length = data.get(\"Time\").length;\n\n  for (let i = 0; i < length; i += simplify ? 25 : 1) {\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (X)\")[i],\n      category: \"x\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (Y)\")[i],\n      category: \"y\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (Sai)\")[i],\n      category: \"Ψ\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Vel (u)\")[i],\n      category: \"u\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Vel (v)\")[i],\n      category: \"v\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"yaw rate (r)\")[i],\n      category: \"r\",\n    });\n  }\n\n  return result;\n};\n\nexport function processEstimateGlobal(data, simplify = true) {\n  let result = [];\n  const length = data.get(\"Time\").length;\n\n  for (let i = 0; i < length; i += simplify ? 25 : 1) {\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (X)\")[i],\n      category: \"x\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (Y)\")[i],\n      category: \"y\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (Sai)\")[i],\n      category: \"Ψ\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (X`)\")[i],\n      category: \"x`\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (Y`)\")[i],\n      category: \"y`\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Position (Sai`)\")[i],\n      category: \"Ψ`\",\n    });\n  }\n\n  return result;\n};\n\nexport function processEstimateLocal(data, simplify = true) {\n  let result = [];\n  const length = data.get(\"Time\").length;\n\n  for (let i = 0; i < length; i += simplify ? 25 : 1) {\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Vel (u)\")[i],\n      category: \"u\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Vel (v)\")[i],\n      category: \"v\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"yaw rate (r)\")[i],\n      category: \"r\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Vel (u`)\")[i],\n      category: \"u`\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"Vel (v`)\")[i],\n      category: \"v`\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"yaw rate (r`)\")[i],\n      category: \"r`\",\n    });\n  }\n\n  return result;\n};\n\nexport function processEstimateFault(data, simplify = true) {\n  let result = [];\n  const length = data.get(\"Time\").length;\n\n  for (let i = 0; i < length; i += simplify ? 25 : 1) {\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"theta 1\")[i],\n      category: \"θ 1\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"theta 2\")[i],\n      category: \"θ 2\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"theta 1`\")[i],\n      category: \"θ 1`\",\n    });\n    result.push({\n      time: data.get(\"Time\")[i],\n      value: data.get(\"theta 2`\")[i],\n      category: \"θ 2`\",\n    });\n  }\n\n  return result;\n};\n"],"names":["generateTrails","data","SKIP_FACTOR","SCALE_FACTOR","position","estimatedPosition","length","get","i","push","processMeasurements","simplify","arguments","undefined","result","time","value","category","processEstimateGlobal","processEstimateLocal","processEstimateFault"],"sourceRoot":""}